[{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.eigs.html#eigs","title":"eigs","text":"eigs\n\n\n\nAnsMath.eigs(nev, k, m=None, c=None, phi=None, algo=None, fmin=None, fmax=None, cpxmod=None)\n\nSolve an eigenproblem.\n\nParameters\n\nnev\n\npython:int\n\nNumber of eigenvalues to compute.\n\nk\n\nAnsMat\n\nAnsMath matrix representing the operation A * x where A is a\nsquare matrix.\n\nm\n\nAnsMat, optional\n\nAnsMath matrix representing the operation M * x for the\ngeneralized eigenvalue problem:\n\nK * x = M * x\n\nExamples\n\nSolve an eigenproblem using the mass and stiffness matrices\nstored from a prior Ansys run.\n\n>>> k = mm.stiff()\n>>> m = mm.mass()\n>>> nev = 10\n>>> a = mm.mat(k.nrow, nev)\n>>> ev = mm.eigs(nev, k, m, phi=a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.solve.html#solve","title":"solve","text":"solve\n\n\n\nAnsSolver.solve(b, x=None)\n\nSolve a linear system.\n\nParameters\n\nb\n\nAnsVec\n\nAnsMath vector.\n\nx\n\nAnsVec, optional\n\nAnsMath vector to place the solution into.\n\nReturns\n\nAnsVec\n\nSolution vector, which is identical to the x parameter if supplied.\n\nExamples\n\n>>> k = mm.stiff(fname='PRSMEMB.full')\n>>> s = mm.factorize(k)\n>>> b = mm.get_vec(fname='PRSMEMB.full', mat_id=\"RHS\")\n>>> x = s.solve(b)\n>>> x\nAnsMath vector size 20000\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.sym.html#sym","title":"sym","text":"sym\n\n\n\nAnsMat.sym() -> bool\n\nReturn if the matrix is symmetric.\n\nReturns\n\nbool\n\nTrue when this matrix is symmetric.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.kron.html#kron","title":"kron","text":"kron\n\n\n\nAnsMathObj.kron(obj)\n\nCalculates the Kronecker product of two matrices/vectors\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nReturns\n\nAnsMat or AnsVec\n\nKronecker product between the two matrices/vectors.\n\nRequires at least MAPDL version 2023R2.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> m1 = mm.rand(3, 3)\n>>> m2 = mm.rand(4,2)\n>>> res = m1.kron(m2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.norm.html#norm","title":"norm","text":"norm\n\n\n\nAnsMat.norm(nrmtype='nrm2')\n\nReturn the norm of the AnsMath object.\n\nParameters\n\nnrmtype\n\npython:str, optional\n\nMathematical norm to use. The default is 'NRM2'. Options are:\n\n'NRM2': L2 (Euclidean or SRSS) norm.\n\n'NRM1': L1 (absolute sum) norm (vectors only).\n\n'NRMINF': Maximum norm.\n\nReturns\n\npython:float\n\nNorm of the matrix or the one or more vectors.\n\nExamples\n\n>>> dim = 1000\n>>> m2 = mm.rand(dim, dim)\n>>> nrm = m2.norm()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.dot.html#dot","title":"dot","text":"dot\n\n\n\nAnsVec.dot(vec) -> float\n\nMultiply the AnsMath vector by another AnsMath vector.\n\nParameters\n\nvec\n\nAnsVec\n\nAnsMath vector.\n\nReturns\n\npython:float\n\nProduct of multiplying this vector with another vector.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.rhs.html#rhs","title":"rhs","text":"rhs\n\n\n\nAnsMath.rhs(dtype=<class 'numpy.float64'>, name=None, fname='file.full', asarray=False)\n\nReturn the load vector from a FULL file.\n\nParameters\n\ndtype\n\nnumpy.dtype, optional\n\nNumPy data type to store the vector as. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\n\nname\n\npython:str, optional\n\nAnsMath vector name. The default is None, in which case a\nname is automatically generated.\n\nfname\n\npython:str, optional\n\nName of the file to read the vector from. The default is \"file.full\".\n\nasarray\n\nbool, optional\n\nWhether to return a NumPy array rather than an AnsMath vector.\nThe default is False.\n\nReturns\n\nAnsVec or numpy.ndarray\n\nAnsMath vector or NumPy array vector, depending on the value for\nthe asarray parameter.\n\nExamples\n\n>>> rhs = mm.rhs(fname='PRSMEMB.full')\nAnsMath vector size 126\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/solve_dense_matrix.html#use-pyansys-math-to-solve-a-dense-matrix-linear-system","title":"Use PyAnsys Math to solve a dense matrix linear system","text":"Use PyAnsys Math to solve a dense matrix linear system\n\nThis example shows how to use PyAnsys Math to solve a dense matrix linear system."},{"objectID":"Home","href":"examples/solve_dense_matrix.html#allocate-dense-matrix","title":"Use PyAnsys Math to solve a dense matrix linear system > Allocate dense matrix","text":"Allocate dense matrix\n\nAllocate a dense matrix in the MAPDL workspace."},{"objectID":"Home","href":"examples/solve_dense_matrix.html#copy-matrices-as-numpy-arrays","title":"Use PyAnsys Math to solve a dense matrix linear system > Copy matrices as NumPy arrays","text":"Copy matrices as NumPy arrays\n\nCopy the matrices as NumPy arrays before they are modified by\na factorization call."},{"objectID":"Home","href":"examples/solve_dense_matrix.html#solve-using-pyansys-math","title":"Use PyAnsys Math to solve a dense matrix linear system > Solve using PyAnsys Math","text":"Solve using PyAnsys Math\n\nSolve the dense matrix linear system using PyAnsys Math."},{"objectID":"Home","href":"examples/solve_dense_matrix.html#get-norm-of-solution","title":"Use PyAnsys Math to solve a dense matrix linear system > Get norm of solution","text":"Get norm of solution\n\nGet the norm of the PyAnsys Math solution."},{"objectID":"Home","href":"examples/solve_dense_matrix.html#solve-using-numpy","title":"Use PyAnsys Math to solve a dense matrix linear system > Solve using NumPy","text":"Solve using NumPy\n\nSolve the dense matrix linear system using NumPy."},{"objectID":"Home","href":"examples/solve_dense_matrix.html#plot-elapsed-times","title":"Use PyAnsys Math to solve a dense matrix linear system > Plot elapsed times","text":"Plot elapsed times\n\nPlot the elapsed times for PyAnsys Math and Numpy to solve the dense\nmatrix linear system.\n\n"},{"objectID":"Home","href":"examples/solve_dense_matrix.html#get-norm-of-solution","title":"Use PyAnsys Math to solve a dense matrix linear system > Get norm of solution","text":"Get norm of solution\n\nGet the norm of the NumPy solution."},{"objectID":"Home","href":"examples/solve_dense_matrix.html#stop-pyansys-math","title":"Use PyAnsys Math to solve a dense matrix linear system > Stop PyAnsys Math","text":"Stop PyAnsys Math\n\nStop PyAnsys Math.\n\nTotal running time of the script: (0 minutes 0.332 seconds)\n\n\n\nDownload Jupyter notebook: solve_dense_matrix.ipynb\n\nDownload Python source code: solve_dense_matrix.py\n\nDownload zipped: solve_dense_matrix.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.ncol.html#ncol","title":"ncol","text":"ncol\n\n\n\nproperty AnsMat.ncol: int\n\nNumber of rows in the matrix.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#compute-eigenvalues-using-pyansys-math-and-scipy","title":"Compute Eigenvalues using PyAnsys Math and SciPy","text":"Compute Eigenvalues using PyAnsys Math and SciPy\n\nThis example shows how to perform these tasks:\n\nExtract the stiffness and mass matrices from an MAPDL model.\n\nUse PyAnsys Math to compute the first eigenvalues.\n\nGet these matrices using SciPy to obtain the same\nsolutions using Python resources.\n\nSee if PyAnsys Math is more accurate and faster than SciPy."},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#perform-required-imports-and-start-pyansys-math","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Perform required imports and start PyAnsys Math","text":"Perform required imports and start PyAnsys Math\n\nPerform required imports."},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#load-the-input-file","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Load the input file","text":"Load the input file\n\nLoad the input file using MAPDL."},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#plot-and-mesh","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Plot and mesh","text":"Plot and mesh\n\nPlot and mesh using the eplot method.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#set-up-modal-analysis","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Set up modal analysis","text":"Set up modal analysis\n\nSet up a modal analysis and form the  and  matrices.\nMAPDL stores these matrices in a .FULL file."},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#read-sparse-matrices","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Read sparse matrices","text":"Read sparse matrices\n\nRead the sparse matrices using PyAnsys Math."},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#solve-eigenproblem","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Solve eigenproblem","text":"Solve eigenproblem\n\nSolve the eigenproblme using PyAnsys Math."},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#print-eigenfrequencies-and-accuracy","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Print eigenfrequencies and accuracy","text":"Print eigenfrequencies and accuracy\n\nPrint the eigenfrequencies and the accuracy.\n\nAccuracy : "},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#use-scipy-to-solve-the-same-eigenproblem","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Use SciPy to solve the same eigenproblem","text":"Use SciPy to solve the same eigenproblem\n\nGet the MAPDL sparse matrices into Python memory as SciPy\nmatrices.\n\n\n\nMake the sparse matrices for SciPy unsymmetric because symmetric matrices\nin SciPy are memory inefficient.\n\n\n\nPlot the matrices.\n\n\n\nSolve the eigenproblem.\n\nConvert lambda values to frequency values:\n\n\nCompute the residual error for SciPy.\n\n"},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#see-if-pyansys-math-is-more-accurate-than-scipy","title":"Compute Eigenvalues using PyAnsys Math and SciPy > See if PyAnsys Math is more accurate than SciPy","text":"See if PyAnsys Math is more accurate than SciPy\n\nPlot residual error to see if PyAnsys Math is more accurate than SciPy.\n\n"},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#see-if-pyansys-math-is-faster-than-scipy","title":"Compute Eigenvalues using PyAnsys Math and SciPy > See if PyAnsys Math is faster than SciPy","text":"See if PyAnsys Math is faster than SciPy\n\nPlot elapsed time to see if PyAnsys Math is more accurate than SciPy."},{"objectID":"Home","href":"examples/ansys-math_vs_scipy.html#stop-pyansys-math","title":"Compute Eigenvalues using PyAnsys Math and SciPy > Stop PyAnsys Math","text":"Stop PyAnsys Math\n\nStop PyAnsys Math.\n\nTotal running time of the script: (0 minutes 11.541 seconds)\n\n\n\nDownload Jupyter notebook: ansys-math_vs_scipy.ipynb\n\nDownload Python source code: ansys-math_vs_scipy.py\n\nDownload zipped: ansys-math_vs_scipy.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.copy.html#copy","title":"copy","text":"copy\n\n\n\nAnsSolver.copy()\n\nGet the name of the copy of this object.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.html#ansmat","title":"AnsMat","text":"AnsMat\n\n\n\nclass ansys.math.core.math.AnsMat(id_, mapdl, type_=ObjType.DMAT)\n\nProvides the AnsMath matrix objects.\n\nMethods\n\n\n\nAttributes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/eigen_solve.html#use-pyansys-math-to-solve-eigenproblems","title":"Use PyAnsys Math to solve eigenproblems","text":"Use PyAnsys Math to solve eigenproblems\n\nThis example uses a verification manual input file, but you can use\nyour own sparse or dense matrices."},{"objectID":"Home","href":"examples/eigen_solve.html#perform-required-imports-and-start-pyansys","title":"Use PyAnsys Math to solve eigenproblems > Perform required imports and start PyAnsys","text":"Perform required imports and start PyAnsys\n\nPerform required imports."},{"objectID":"Home","href":"examples/eigen_solve.html#get-matrices","title":"Use PyAnsys Math to solve eigenproblems > Get matrices","text":"Get matrices\n\nRun the input file from Verification Manual 153 and then\nget the stiff (k) and mass (m) matrices from the FULL file."},{"objectID":"Home","href":"examples/eigen_solve.html#display-size-of-the-matrices","title":"Use PyAnsys Math to solve eigenproblems > Display size of the matrices","text":"Display size of the matrices\n\nDisplay size of the k and m matrices."},{"objectID":"Home","href":"examples/eigen_solve.html#allocate-an-array-to-store-eigenshapes","title":"Use PyAnsys Math to solve eigenproblems > Allocate an array to store eigenshapes","text":"Allocate an array to store eigenshapes\n\nAllocate an array to store the eigenshapes, where nev` is the number\nof eigenvalues requested,"},{"objectID":"Home","href":"examples/eigen_solve.html#perform-modal-analysis","title":"Use PyAnsys Math to solve eigenproblems > Perform modal analysis","text":"Perform modal analysis\n\nPerform the modal analysis.\n\nThe algorithm is automatically chosen with respect to the properties\nof the matrices (such as scalar, storage, or symmetry)."},{"objectID":"Home","href":"examples/eigen_solve.html#print-eigenfrequencies","title":"Use PyAnsys Math to solve eigenproblems > Print eigenfrequencies","text":"Print eigenfrequencies\n\nPrint the vector of eigenfrequencies."},{"objectID":"Home","href":"examples/eigen_solve.html#verify-the-accuracy-of-eigenresults","title":"Use PyAnsys Math to solve eigenproblems > Verify the accuracy of eigenresults","text":"Verify the accuracy of eigenresults\n\nCheck the residual error for the first eigenresult:\n\n\nFirst, compute \n\nThen get the first eigenshape  and compute both\n and .\n\nNext, compute the  quantity and normalize the\nresidual value.\n\nAdd these two vectors, using the  scalar\nfactor, and compute the normalized residual value:\n\n\nCompute this residual for all eigenmodes"},{"objectID":"Home","href":"examples/eigen_solve.html#plot-accuracy-of-eigenresults","title":"Use PyAnsys Math to solve eigenproblems > Plot accuracy of eigenresults","text":"Plot accuracy of eigenresults\n\nPlot tahe accuracy of the eigenresults.\n\n"},{"objectID":"Home","href":"examples/eigen_solve.html#stop-pyansys-math","title":"Use PyAnsys Math to solve eigenproblems > Stop PyAnsys Math","text":"Stop PyAnsys Math\n\nStop PyAnsys Math.\n\nTotal running time of the script: (0 minutes 1.491 seconds)\n\n\n\nDownload Jupyter notebook: eigen_solve.ipynb\n\nDownload Python source code: eigen_solve.py\n\nDownload zipped: eigen_solve.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"user_guide/arrays.html#handling-arrays-between-pyansys-math-and-python","title":"Handling arrays between PyAnsys Math and Python","text":"Handling arrays between PyAnsys Math and Python"},{"objectID":"Home","href":"user_guide/arrays.html#sending-arrays-to-pyansys-math","title":"Handling arrays between PyAnsys Math and Python > Sending arrays to PyAnsys Math","text":"Sending arrays to PyAnsys Math"},{"objectID":"Home","href":"user_guide/arrays.html#transfer-a-pyansys-math-matrix-to-numpy","title":"Handling arrays between PyAnsys Math and Python > Transfer a PyAnsys Math matrix to NumPy","text":"Transfer a PyAnsys Math matrix to NumPy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.html#ansvec","title":"AnsVec","text":"AnsVec\n\n\n\nclass ansys.math.core.math.AnsVec(id_, mapdl, dtype=<class 'numpy.float64'>, init=None)\n\nProvides the AnsMath vector objects.\n\nMethods\n\n\n\nAttributes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.copy.html#copy","title":"copy","text":"copy\n\n\n\nAnsMat.copy()\n\nGet the name of the copy of this object.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.axpy.html#axpy","title":"axpy","text":"axpy\n\n\n\nAnsMathObj.axpy(obj, val1, val2)\n\nPerform the matrix operation: self= val1*obj + val2*self.\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nval1\n\npython:float\n\nRatio applied to the AnsMath object.\n\nval2\n\npython:float\n\nRatio applied to the self object.\n\nReturns\n\nAnsVec or AnsMat\n\nMatrix operation result of self= val1*obj + val2*self.\n\nExamples\n\n>>> dim = 2\n>>> m1 = mm.ones(dim, dim)\n>>> m2 = mm.rand(dim, dim)\n>>> m1.axpy(m2, 3, 4)\n>>> m1.asarray()\narray([[5.251066  , 6.16097347], [6.99155442, 6.79767208]])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.matrix.html#matrix","title":"matrix","text":"matrix\n\n\n\nAnsMath.matrix(matrix, name=None, triu=False)\n\nSend a SciPy matrix or NumPy array to MAPDL.\n\nParameters\n\nmatrix\n\nnp.ndarray\n\nSciPy matrix or NumPy array to send as a matrix to MAPDL.\n\nname\n\npython:str, optional\n\nAnsMath matrix name. The default is None, in which case a\nname is automatically generated.\n\ntriu\n\nbool, optional\n\nWhether the matrix is the upper triangular. The default is False,\nwhich means that the matrix is unsymmetric.\n\nReturns\n\nAnsMat\n\nMath matrix.\n\nExamples\n\nGenerate a random sparse matrix.\n\n>>> from scipy import sparse\n>>> sz = 5000\n>>> mat = sparse.random(sz, sz, density=0.05, format='csr')\n>>> ans_mat = mm.matrix(mat, name)\n>>> ans_mat\nAnsMath matrix 5000 x 5000\n\nTransfer the matrix back to Python.\n\n>>> ans_mat.asarray()\n<500x5000 sparse matrix of type '<class 'numpy.float64'>'\n        with 1250000 stored elements in Compressed Sparse Row (CSR) format>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#perform-sparse-factorization-and-solve-operations","title":"Perform sparse factorization and solve operations","text":"Perform sparse factorization and solve operations\n\nUsing PyAnsys Math, you can solve linear systems of equations\nbased on sparse or dense matrices."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#factorize-and-solve-sparse-linear-systems","title":"Perform sparse factorization and solve operations > Factorize and solve sparse linear systems","text":"Factorize and solve sparse linear systems\n\nRun a MAPDL solve to create a Full file. This code\nuses a model from the official verification manual.\n\nAfter a solve command, the FULL file contains the assembled stiffness\nmatrix, mass matrix, and load vector."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#list-files-in-current-directory","title":"Perform sparse factorization and solve operations > List files in current directory","text":"List files in current directory\n\nList the files in current directory."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#extract-stiffness-matrix","title":"Perform sparse factorization and solve operations > Extract stiffness matrix","text":"Extract stiffness matrix\n\nExtract the stiffness matrix from the FULL file in a sparse\nmatrix format. For help on the stiff function, use the\nhelp(mm.stiff) command."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#print-dimensions-of-sparse-matrix","title":"Perform sparse factorization and solve operations > Print dimensions of sparse matrix","text":"Print dimensions of sparse matrix\n\nPrint the dimensions of the sparse matrix."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#copy-ansmath-sparse-matrix-to-scipy-csr-matrix-and-plot","title":"Perform sparse factorization and solve operations > Copy AnsMath sparse matrix to SciPy CSR matrix and plot","text":"Copy AnsMath sparse matrix to SciPy CSR matrix and plot\n\nCopy the AnsMath sparse matrix to a SciPy CSR matrix. Then, plot the\ngraph of the sparse matrix.\n\n"},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#get-a-copy-of-sparse-matrix-as-a-numpy-array","title":"Perform sparse factorization and solve operations > Get a copy of sparse matrix as a NumPy array","text":"Get a copy of sparse matrix as a NumPy array\n\nGet a copy of the k sparse matrix as a NumPy array"},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#extract-load-vector-from-full-file-and-print-norm","title":"Perform sparse factorization and solve operations > Extract load vector from FULL file and print norm","text":"Extract load vector from FULL file and print norm\n\nExtract the load vector from the FULL file and print the norm of this\nvector."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#get-a-copy-of-load-vector-as-a-numpy-array","title":"Perform sparse factorization and solve operations > Get a copy of load vector as a NumPy array","text":"Get a copy of load vector as a NumPy array\n\nGet a copy of the load vector as a NumPy array."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#factorize-stiffness-matrix","title":"Perform sparse factorization and solve operations > Factorize stiffness matrix","text":"Factorize stiffness matrix\n\nFactorize the stiffness matrix using PyAnsys Math."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#solve-linear-system","title":"Perform sparse factorization and solve operations > Solve linear system","text":"Solve linear system\n\nSolve the linear system."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#print-norm-of-solution-vector","title":"Perform sparse factorization and solve operations > Print norm** of solution vector","text":"Print norm** of solution vector\n\nPrint the norm of the solution vector."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#check-accuracy-of-solution","title":"Perform sparse factorization and solve operations > Check accuracy of solution","text":"Check accuracy of solution\n\nCheck the accuracy of the solution by verifying that\n."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#get-a-summary-of-allocated-objects","title":"Perform sparse factorization and solve operations > Get a summary of allocated objects","text":"Get a summary of allocated objects\n\nGet a summary of all allocated AnsMath objects."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#delete-all-ansmath-objects","title":"Perform sparse factorization and solve operations > Delete all AnsMath objects","text":"Delete all AnsMath objects\n\nDelete all AnsMath objects."},{"objectID":"Home","href":"examples/solve_sparse_matrix.html#stop-pyansys-math","title":"Perform sparse factorization and solve operations > Stop PyAnsys Math","text":"Stop PyAnsys Math\n\nStop PyAnsys Math.\n\nTotal running time of the script: (0 minutes 0.609 seconds)\n\n\n\nDownload Jupyter notebook: solve_sparse_matrix.ipynb\n\nDownload Python source code: solve_sparse_matrix.py\n\nDownload zipped: solve_sparse_matrix.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.ones.html#ones","title":"ones","text":"ones\n\n\n\nAnsMathObj.ones()\n\nSet all values of the object to one.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.factorize.html#factorize","title":"factorize","text":"factorize\n\n\n\nAnsMath.factorize(mat, algo=None, inplace=True)\n\nFactorize a matrix.\n\nParameters\n\nmat\n\nAnsMat\n\nAnsMath matrix.\n\nalgo\n\npython:str, optional\n\nFactorization algorithm. Options are \"LAPACK\" and \"DSP\".\nThe default is \"LAPACK\" for dense matrices and \"DSP\" for\nsparse matrices.\n\ninplace\n\nbool, optional\n\nWhether the factorization is performed on the input matrix\nrather than on a copy of this matrix. Performing factorization on\na copy of this matrix would result in no changes to the input\nmatrix. The default is True.\n\nReturns\n\nAnsSolver\n\nAnsys Solver object.\n\nExamples\n\nFactorize a random matrix.\n\n>>> dim = 1000\n>>> m2 = mm.rand(dim, dim)\n>>> m3 = m2.copy()\n>>> mat = mm.factorize(m2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.html#anssolver","title":"AnsSolver","text":"AnsSolver\n\n\n\nclass ansys.math.core.math.AnsSolver(id_, mapdl=None, dtype=ObjType.GEN)\n\nProvides the AnsMath solver class.\n\nMethods\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.rand.html#rand","title":"rand","text":"rand\n\n\n\nAnsMat.rand()\n\nSet all values of the object to a random number.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.zeros.html#zeros","title":"zeros","text":"zeros\n\n\n\nAnsSolver.zeros()\n\nSet all values of the object to zero.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.stiff.html#stiff","title":"stiff","text":"stiff\n\n\n\nAnsMath.stiff(dtype=<class 'numpy.float64'>, name=None, fname='file.full', asarray=False)\n\nLoad the stiffness matrix from a FULL file.\n\nParameters\n\ndtype\n\nnumpy.dtype, optional\n\nNumPy data type to store the matrix as. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\nThis parameter is only applicable if asarray=True.\n\nname\n\npython:str, optional\n\nAnsMath matrix name. The default is None, in which case a\nname is automatically generated.\n\nfname\n\npython:str, optional\n\nName of the file to read the matrix from. The default is \"file.full\".\n\nasarray\n\nbool, optional\n\nWhether to return a SciPy array rather than an AnsMath matrix.\nThe default is False.\n\nReturns\n\nAnsMat or scipy.sparse.csr.csr_matrix\n\nAnsMath matrix or SciPy sparse matrix, depending on the value for\nthe asarray parameter.\n\nExamples\n\n>>> k = mm.stiff()\nAnsMath matrix 60 x 60\n\nConvert to a SciPy array.\n\n>>> mat = k.asarray()\n>>> mat\n<60x60 sparse matrix of type '<class 'numpy.float64'>'\n    with 1734 stored elements in Compressed Sparse Row (CSR) format>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.norm.html#norm","title":"norm","text":"norm\n\n\n\nAnsMath.norm(obj, order='nrm2')\n\nReturn the norm of an AnsMath object.\n\nParameters\n\nobj\n\nAnsMat or AnsVec\n\nAnsMath object to compute the norm from.\n\norder\n\npython:str\n\nMathematical norm to use. The default is 'NRM2'.\nOptions are:\n\n'NRM2': L2 (Euclidean or SRSS) norm.\n\n'NRM1': L1 (absolute sum) norm (vectors only).\n\n'NRMINF': Maximum norm.\n\nnrm\n\npython:float\n\nNorm of the matrix or the one or more vectors.\n\nExamples\n\nCompute the norm of an AnsMath vector.\n\n>>> v = mm.ones(10)\n>>> print (mm.norm(v))\n>>> 3.1622776601683795\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.ones.html#ones","title":"ones","text":"ones\n\n\n\nAnsVec.ones()\n\nSet all values of the object to one.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.size.html#size","title":"size","text":"size\n\n\n\nproperty AnsVec.size\n\nNumber of items in this vector.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.const.html#const","title":"const","text":"const\n\n\n\nAnsMat.const(value)\n\nSet all values of the object to a constant.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.axpy.html#axpy","title":"axpy","text":"axpy\n\n\n\nAnsSolver.axpy(obj, val1, val2)\n\nPerform the matrix operation: self= val1*obj + val2*self.\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nval1\n\npython:float\n\nRatio applied to the AnsMath object.\n\nval2\n\npython:float\n\nRatio applied to the self object.\n\nReturns\n\nAnsVec or AnsMat\n\nMatrix operation result of self= val1*obj + val2*self.\n\nExamples\n\n>>> dim = 2\n>>> m1 = mm.ones(dim, dim)\n>>> m2 = mm.rand(dim, dim)\n>>> m1.axpy(m2, 3, 4)\n>>> m1.asarray()\narray([[5.251066  , 6.16097347], [6.99155442, 6.79767208]])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.zeros.html#zeros","title":"zeros","text":"zeros\n\n\n\nAnsMath.zeros(nrow, ncol=None, dtype=<class 'numpy.float64'>, name=None, asarray=False)\n\nCreate a vector or a matrix where all values are zeros.\n\nParameters\n\nnrow\n\npython:int\n\nNumber of rows.\n\nncol\n\npython:int, optional\n\nNumber of columns. If a value is specified, a matrix is returned.\n\ndtype\n\nnp.dtype, optional\n\nNumPy data type of the object. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\n\nname\n\npython:str, optional\n\nAnsMath object name. The default is None, in which case a\nname is automatically generated.\n\nasarray\n\nbool, optional\n\nWhether to return a NumPy array rather than an AnsMath object.\nThe default is False.\n\nReturns\n\nAnsVec, AnsMat, or numpy.ndarray\n\nAnsMath vector, NumPy array vector, AnsMath matrix, or NumPy array matrix,\ndepending on the value for the asarray parameter and if a value for\nthe ncol parameter is specified.\n\nExamples\n\nCreate a vector where all values are zeros.\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> vec = mm.zeros(10)\n\nCreate a matrix where all values are zeros.\n\n>>> mat = mm.zeros(10, 10)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.rand.html#rand","title":"rand","text":"rand\n\n\n\nAnsMath.rand(nrow, ncol=None, dtype=<class 'numpy.float64'>, name=None, asarray=False)\n\nCreate a vector or a matrix where all values are random.\n\nParameters\n\nnrow\n\npython:int\n\nNumber of rows.\n\nncol\n\npython:int, optional\n\nNumber of columns. If a value is specified, a matrix is returned.\n\ndtype\n\nnp.dtype, optional\n\nNumPy data type of the object. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\n\nname\n\npython:str, optional\n\nAnsMath object name. The default is None, in which case a\nname is automatically generated.\n\nasarray\n\nbool, optional\n\nWhether to return a NumPy array rather than an AnsMath object.\nThe default is False.\n\nReturns\n\nAnsVec, AnsMat, or numpy.ndarray\n\nAnsMath vector, NumPy array vector, AnsMath matrix, or NumPy array matrix,\ndepending on the value for the asarray parameter and if a value for\nthe ncol parameter is specified.\n\nExamples\n\nCreate a vector where all values are random.\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> vec = mm.rand(10)\n\nCreate a matrix where all values are random.\n\n>>> mat = mm.rand(10, 10)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.rand.html#rand","title":"rand","text":"rand\n\n\n\nAnsMathObj.rand()\n\nSet all values of the object to a random number.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.html#ansmathobj","title":"AnsMathObj","text":"AnsMathObj\n\n\n\nclass ansys.math.core.math.AnsMathObj(id_, mapdl=None, dtype=ObjType.GEN)\n\nProvides the common class for AnsMath objects.\n\nMethods\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.damp.html#damp","title":"damp","text":"damp\n\n\n\nAnsMath.damp(dtype=<class 'numpy.float64'>, name=None, fname='file.full', asarray=False)\n\nLoad the damping matrix from a FULL file.\n\nParameters\n\ndtype\n\nnumpy.dtype, optional\n\nNumPy data type to store the matrix as. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\nThis parameter is only applicable if asarray=True.\n\nname\n\npython:str, optional\n\nAnsMath matrix name. The default is None, in which case a\nname is automatically generated.\n\nfname\n\npython:str, optional\n\nName of the file to read the matrix from. The default is \"file.full\".\n\nasarray\n\nbool, optional\n\nWhether to return a SciPy array rather than an AnsMath matrix.\nThe default is False.\n\nReturns\n\nAnsMat or scipy.sparse.csr.csr_matrix\n\nAnsMath matrix or SciPy sparse matrix, depending on the value for\nthe asarray parameter.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> ans_mat = mm.damp()\n>>> ans_mat\nAnsMath Matrix 60 x 60\n\nConvert to a SciPy array.\n\n>>> mat = ans_mat.asarray()\n>>> mat\n<60x60 sparse matrix of type '<class 'numpy.float64'>'\n    with 1734 stored elements in Compressed Sparse Row (CSR) format>.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/basic_operations.html#pyansys-math-basic-operations","title":"PyAnsys Math basic operations","text":"PyAnsys Math basic operations\n\nThis tutorial shows how you can use PyAnsys Math for basic\noperations on AnsMath vectors and matrices in the APDL memory\nworkspace."},{"objectID":"Home","href":"examples/basic_operations.html#perform-required-imports-and-start-pyansys","title":"PyAnsys Math basic operations > Perform required imports and start PyAnsys","text":"Perform required imports and start PyAnsys\n\nPerform required imports."},{"objectID":"Home","href":"examples/basic_operations.html#create-and-manipulate-vectors","title":"PyAnsys Math basic operations > Create and manipulate vectors","text":"Create and manipulate vectors\n\nCreate two AnsMath vectors of size 5. The  method is initialized with\nones, and the  is filled with random values."},{"objectID":"Home","href":"examples/basic_operations.html#plot-vectors","title":"PyAnsys Math basic operations > Plot vectors","text":"Plot vectors\n\nPlot the created vectors.\n\n"},{"objectID":"Home","href":"examples/basic_operations.html#use-operators-on-vectors","title":"PyAnsys Math basic operations > Use operators on vectors","text":"Use operators on vectors\n\nLike NumPy vectors, AnsMath vectors can use most of the\nstandard operators, such as +, -, +=, -=,\nand *=.\n\nHere this form is used: \n\nCompute . (The default norm is nrm2. Note that you\ncan use .norm('nrm1') or .norm('nrminf') for different normals.\nFor more information, see help(z.norm)."},{"objectID":"Home","href":"examples/basic_operations.html#methods","title":"PyAnsys Math basic operations > Methods","text":"Methods\n\nAlternatively you can use methods, following the NumPy\nstandards. Available methods are:\n\nmm.add()\n\nmm.subtract()\n\nmm.dot()\n\nEquivalent operator for addition:\nz = v + w\n\nEquivalent operator for subtraction:\nz = v - w\n\nEquivalent dot operation for the product of two vectors:"},{"objectID":"Home","href":"examples/basic_operations.html#perform-in-place-operations-without-copying-vectors","title":"PyAnsys Math basic operations > Perform in-place operations (without copying vectors)","text":"Perform in-place operations (without copying vectors)\n\nPerform in-place addition.\n\nPerform in-place multiplication.\n\nPerform another in-place multiplication."},{"objectID":"Home","href":"examples/basic_operations.html#working-with-dense-matrices","title":"PyAnsys Math basic operations > Working with dense matrices","text":"Working with dense matrices\n\nAllocate two dense matrices with random values.\n\nAdd these 2 dense matrices and then scale the result matrix.\n\nTranspose a matrix.\n\nAs for vectors, methods are available as an alternative to operators.\n\nCompute a matrix vector multiplication.\n\nAnsMath matrices can be identified by printing, viewing their types, or\nusing the __repr__ method by simply typing out the variable.\n\nHere is an example with an AnsMath matrix.\n\nHere is an example with an AnsMath vector."},{"objectID":"Home","href":"examples/basic_operations.html#use-numpy-methods-on-ansmath-objects","title":"PyAnsys Math basic operations > Use NumPy methods on AnsMath objects","text":"Use NumPy methods on AnsMath objects\n\nRegardless of the underlying AnsMath object type, you are generally\nable to perform most NumPy or SciPy operations on these arrays. You\ncan do this in one of two ways.\n\nYou can convert a matrix to a NumPy array.\n\nAlternatively, you can use NumPy to compute the maximum of the array.\n\nThis works because PyAnsys Math copies over the matrix to the local\nPython memory and then computes the maximum using NumPy.\n\nWhile this works for most NumPy operations, keep in mind that\noperations supported within PyAnsys Math (such as adding or\nmultiplying arrays) compute much faster because the data is not copied."},{"objectID":"Home","href":"examples/basic_operations.html#stop-pyansys-math","title":"PyAnsys Math basic operations > Stop PyAnsys Math","text":"Stop PyAnsys Math\n\nStop PyAnsys Math.\n\nTotal running time of the script: (0 minutes 0.527 seconds)\n\n\n\nDownload Jupyter notebook: basic_operations.ipynb\n\nDownload Python source code: basic_operations.py\n\nDownload zipped: basic_operations.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Release notes","href":"changelog.html#release-notes","title":"Release notes","text":"Release notes\n\nThis document contains the release notes for the PyAnsys Math project."},{"objectID":"Release notes","href":"changelog.html#024---may-26-2025","title":"Release notes > 0.2.4 - May 26, 2025","text":"0.2.4 - May 26, 2025\n\nDocumentation\n\n\n\n\n\nchore: update CHANGELOG for v0.2.3\n\n#515"},{"objectID":"Release notes","href":"changelog.html#023---may-26-2025","title":"Release notes > 0.2.3 - May 26, 2025","text":"0.2.3 - May 26, 2025\n\nAdded\n\n\n\n\n\nfeat: update changelog template\n\n#480\n\nfeat: supporting python 3.13\n\n#511\n\nfeat: release with trusted publisher\n\n#514\n\nFixed\n\n\n\n\n\nfix: version in main branch\n\n#513\n\nDependencies\n\n\n\n\n\nmaint: bump jupyterlab from 4.3.4 to 4.3.5\n\n#471\n\nmaint: bump pypandoc from 1.14 to 1.15\n\n#473\n\nmaint: bump scipy from 1.14.1 to 1.15.2\n\n#477\n\nmaint: bump pytest from 8.3.3 to 8.3.5\n\n#478\n\nmaint: bump trame from 3.7.0 to 3.8.1\n\n#483\n\nmaint: bump ansys-sphinx-theme from 1.2.6 to 1.3.3\n\n#488\n\nmaint: bump numpy from 2.2.2 to 2.2.4\n\n#489\n\nmaint: bump sphinx-gallery from 0.18.0 to 0.19.0\n\n#491\n\nmaint: bump jupyterlab from 4.3.5 to 4.3.6\n\n#492\n\nmaint: bump sphinx-notfound-page from 1.0.4 to 1.1.0\n\n#493\n\nmaint: bump pyansys-tools-report from 0.8.1 to 0.8.2\n\n#494\n\nmaint: bump vtk from 9.3.1 to 9.4.2\n\n#495\n\nmaint: bump pytest-cov from 6.0.0 to 6.1.1\n\n#497\n\nmaint: bump ansys-sphinx-theme from 1.3.3 to 1.4.2\n\n#498\n\nfix: removing attrs max version as it is no longer an issue\n\n#499\n\nmaint: bump ansys-mapdl-core from 0.68.6 to 0.69.3\n\n#500\n\nmaint: bump pyvista from 0.44.2 to 0.45.2\n\n#509\n\nmaint: bump pyvista[jupyter,trame] from 0.44.2 to 0.45.2\n\n#510\n\nMiscellaneous\n\n\n\n\n\n[pre-commit.ci] pre-commit autoupdate\n\n#476, #487, #503\n\nDocumentation\n\n\n\n\n\nchore: update CHANGELOG for v0.2.2\n\n#470\n\nMaintenance\n\n\n\n\n\nci: not using student for doc build\n\n#479\n\nci: fix MAPDL version in build-test action\n\n#482\n\nmaint: bump docker/login-action from 3.3.0 to 3.4.0 in the actions group\n\n#490\n\ndocs: Update CONTRIBUTORS.md with the latest contributors\n\n#496\n\nmaint: bump ansys/actions from 8 to 9 in the actions group\n\n#502"},{"objectID":"Release notes","href":"changelog.html#022---2025-01-31","title":"Release notes > 0.2.2 - 2025-01-31","text":"0.2.2 - 2025-01-31"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: PR commenter added to release job #469"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nchore: update CHANGELOG for v0.2.1 #468"},{"objectID":"Release notes","href":"changelog.html#021---2025-01-31","title":"Release notes > 0.2.1 - 2025-01-31","text":"0.2.1 - 2025-01-31"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: adding PR comments on release #467"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: avoid the usage of attrs 24.3.0 (temporary) #466"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nmaint: bump sphinx-autodoc-typehints from 2.4.4 to 2.5.0 #427\n\nmaint: bump ansys-mapdl-core from 0.68.5 to 0.68.6 #428\n\nmaint: bump pypandoc from 1.13 to 1.14 #429\n\nmaint: bump sphinx from 8.0.2 to 8.1.3 #430\n\nmaint: bump ansys-sphinx-theme from 1.1.2 to 1.1.4 #431\n\nmaint: bump sphinx-gallery from 0.17.1 to 0.18.0 #434\n\nmaint: bump trame from 3.6.5 to 3.7.0 #435\n\nmaint: bump pyansys-tools-report from 0.8.0 to 0.8.1 #436\n\nmaint: bump ansys-sphinx-theme from 1.1.4 to 1.1.7 #437\n\nmaint: bump pytest-cov from 5.0.0 to 6.0.0 #440\n\nmaint: bump numpy from 2.1.2 to 2.1.3 #442\n\nmaint: bump ansys-sphinx-theme from 1.1.7 to 1.2.1 #445\n\nmaint: bump jupyterlab from 4.2.5 to 4.3.1 #446\n\nmaint: bump ansys-sphinx-theme from 1.2.1 to 1.2.2 #448\n\nmaint: bump pytest-rerunfailures from 14.0 to 15.0 #449\n\nmaint: bump ansys-mapdl-reader from 0.54.1 to 0.54.2 #450\n\nmaint: bump pyvista[jupyter,trame] from 0.44.1 to 0.44.2 #451, #457\n\nmaint: bump jupyterlab from 4.3.1 to 4.3.4 #460\n\nmaint: bump ansys-sphinx-theme from 1.2.2 to 1.2.6 #462\n\nmaint: bump numpy from 2.1.3 to 2.2.2 #464\n\nmaint: bump sphinx-autodoc-typehints from 2.5.0 to 3.0.1 #465"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nchore: update CHANGELOG for v0.2.0 #426"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nmaint: bump codecov/codecov-action from 4 to 5 in the actions group #444"},{"objectID":"Release notes","href":"changelog.html#020---2024-10-08","title":"Release notes > 0.2.0 - 2024-10-08","text":"0.2.0 - 2024-10-08"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.1.5 #328\n\nmaint: adding update-changelog as a CICD dependency #329\n\n[pre-commit.ci] pre-commit autoupdate #351\n\nmaint: implement ansys/actions/check-vulnerabilities in CICD #355\n\nmaint: bump docker/login-action from 3.1.0 to 3.2.0 in the actions group #356\n\nmaint: bump docker/login-action from 3.2.0 to 3.3.0 in the actions group #388"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: adding a waiting time for MAPDL service to start #354"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nmaint: bump pyvista from 0.43.5 to 0.43.6 #331\n\nmaint: bump pytest from 8.1.1 to 8.2.0 #332\n\nmaint: bump jupyterlab from 4.1.6 to 4.1.8 #333\n\nmaint: bump sphinx-gallery from 0.15.0 to 0.16.0 #334\n\nmaint: bump pyvista[jupyter,trame] from 0.43.5 to 0.43.6 #335\n\nmaint: bump pyvista from 0.43.6 to 0.43.7 #337\n\nmaint: bump pyvista[jupyter,trame] from 0.43.5 to 0.43.7 #338\n\nmaint: bump jupyterlab from 4.1.8 to 4.2.0 #339\n\nmaint: bump pytest from 8.2.0 to 8.2.1 #341\n\nmaint: bump pyvista from 0.43.7 to 0.43.8 #342\n\nmaint: bump ansys-sphinx-theme from 0.15.2 to 0.16.0 #343\n\nmaint: bump pyvista[jupyter,trame] from 0.43.7 to 0.43.8 #344, #357\n\nmaint: bump jupyterlab from 4.2.0 to 4.2.1 #346\n\nmaint: bump sphinx-design from 0.5.0 to 0.6.0 #347\n\nmaint: bump pyansys-tools-report from 0.7.0 to 0.7.3 #348\n\nmaint: bump sphinx-notfound-page from 1.0.0 to 1.0.2 #349\n\nmaint: bump scipy from 1.13.0 to 1.13.1 #350\n\nmaint: bump trame from 3.6.0 to 3.6.2 #358\n\nmaint: bump ansys-sphinx-theme from 0.16.0 to 0.16.5 #359\n\nmaint: bump pytest from 8.2.1 to 8.2.2 #360\n\nmaint: bump pyvista[jupyter,trame] from 0.43.8 to 0.43.9 #361, #366\n\nmaint: bump pyvista from 0.43.8 to 0.43.9 #362\n\nmaint: bump jupyterlab from 4.2.1 to 4.2.2 #363\n\nmaint: bump sphinx-autodoc-typehints from 2.1.0 to 2.1.1 #364\n\nmaint: bump numpy from 1.26.4 to 2.1.2 #367\n\nmaint: bump sphinx-autodoc-typehints from 2.1.1 to 2.2.2 #369\n\nmaint: bump pyvista[jupyter,trame] from 0.43.9 to 0.43.10 #370\n\nmaint: bump pyvista from 0.43.9 to 0.43.10 #371\n\nmaint: bump ansys-sphinx-theme from 0.16.5 to 0.16.6 #372\n\nmaint: bump jupyterlab from 4.2.2 to 4.2.3 #374\n\nmaint: bump vtk from 9.3.0 to 9.3.1 #375\n\nmaint: bump trame from 3.6.2 to 3.6.3 #376\n\nmaint: bump scipy from 1.13.1 to 1.14.0 #379\n\nmaint: bump pyvista from 0.43.10 to 0.44.0 #380\n\nmaint: bump ansys-mapdl-core from 0.68.1 to 0.68.4 #383\n\nmaint: bump pytest from 8.2.2 to 8.3.1 #384\n\nmaint: bump sphinx-gallery from 0.16.0 to 0.17.0 #385\n\nmaint: bump sphinx-autodoc-typehints from 2.2.2 to 2.2.3 #386\n\nmaint: bump pyvista from 0.44.0 to 0.44.1 #387\n\nmaint: bump pytest from 8.3.1 to 8.3.2 #390\n\nmaint: bump sphinx-notfound-page from 1.0.2 to 1.0.4 #391\n\nmaint: bump pyvista[jupyter,trame] from 0.44.0 to 0.44.1 #393\n\nmaint: bump jupyterlab from 4.2.3 to 4.2.4 #396\n\nmaint: bump numpydoc from 1.7.0 to 1.8.0 #397\n\nmaint: bump sphinx-gallery from 0.17.0 to 0.17.1 #398\n\nmaint: bump pyansys-tools-report from 0.7.3 to 0.8.0 #400\n\nmaint: bump ansys-sphinx-theme from 1.0.3 to 1.0.5 #401\n\nmaint: bump ansys-sphinx-theme from 1.0.5 to 1.0.7 #402\n\nmaint: bump scipy from 1.14.0 to 1.14.1 #404\n\nmaint: bump sphinx-autodoc-typehints from 2.2.3 to 2.3.0 #406\n\nmaint: bump jupyterlab from 4.2.4 to 4.2.5 #407\n\nmaint: bump sphinx-autobuild from 2024.4.16 to 2024.9.3 #408\n\nmaint: bump pytest from 8.3.2 to 8.3.3 #409\n\nmaint: bump trame from 3.6.3 to 3.6.5 #410\n\nmaint: bump ansys-sphinx-theme from 1.0.7 to 1.0.9 #411\n\nmaint: bump ansys-mapdl-reader from 0.53.0 to 0.54.1 #412\n\nmaint: bump ansys-sphinx-theme from 1.0.9 to 1.0.11 #413\n\nmaint: bump sphinx-autodoc-typehints from 2.3.0 to 2.4.4 #414\n\nmaint: bump sphinx-autobuild from 2024.9.3 to 2024.9.19 #415\n\nmaint: bump sphinx-autobuild from 2024.9.19 to 2024.10.3 #421\n\nmaint: bump ansys-sphinx-theme from 1.0.11 to 1.1.2 #422"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\n[pre-commit.ci] pre-commit autoupdate #336, #340, #345, #365, #368, #373, #377, #382, #389, #394, #399, #405, #416, #424"},{"objectID":"Release notes","href":"changelog.html#documentation","title":"Release notes > Documentation","text":"Documentation\n\nmaint: bump sphinx from 7.3.7 to 8.0.2 #392"},{"objectID":"Release notes","href":"changelog.html#maintenance","title":"Release notes > Maintenance","text":"Maintenance\n\nmaint: bump ansys/actions from 6 to 7 in the actions group #395\n\nci: updating supported Python versions #420\n\nmaint: bump ansys/actions from 7 to 8 in the actions group #423\n\nmaint: updating CONTRIBUTORS.md and AUTHORS files #425"},{"objectID":"Release notes","href":"changelog.html#015---2024-04-22","title":"Release notes > 0.1.5 - 2024-04-22","text":"0.1.5 - 2024-04-22"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\nchore: update CHANGELOG for v0.1.4 #325\n\nci: establish stage dependencies for release #327"},{"objectID":"Release notes","href":"changelog.html#miscellaneous","title":"Release notes > Miscellaneous","text":"Miscellaneous\n\ndocs: title level for release notes #326"},{"objectID":"Release notes","href":"changelog.html#014---2024-04-22","title":"Release notes > 0.1.4 - 2024-04-22","text":"0.1.4 - 2024-04-22"},{"objectID":"Release notes","href":"changelog.html#added","title":"Release notes > Added","text":"Added\n\nfeat: implementing ansys/actions/doc-changelog #316"},{"objectID":"Release notes","href":"changelog.html#changed","title":"Release notes > Changed","text":"Changed\n\ndoc: adding release notes in documentation #324"},{"objectID":"Release notes","href":"changelog.html#fixed","title":"Release notes > Fixed","text":"Fixed\n\nfix: updating CICD (Vale, MAPDL image) #322\n\nfix: removing md Vale checks #323"},{"objectID":"Release notes","href":"changelog.html#dependencies","title":"Release notes > Dependencies","text":"Dependencies\n\nmaint: bump sphinx-autodoc-typehints from 2.0.0 to 2.1.0 #317\n\nmaint: bump ansys-sphinx-theme from 0.15.0 to 0.15.2 #318\n\nmaint: bump sphinx-autobuild from 2024.4.13 to 2024.4.16 #319\n\nmaint: bump sphinx from 7.2.6 to 7.3.7 #320\n\nmaint: bump jupyterlab from 4.1.5 to 4.1.6 #321\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.zeros.html#zeros","title":"zeros","text":"zeros\n\n\n\nAnsMat.zeros()\n\nSet all values of the object to zero.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Computation times","href":"sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n00:15.448 total execution time for 7 files from all galleries:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_ansys-math_vs_scipy.py (../../examples/ansys-math_vs_scipy.py)\n\n00:11.541\n\n0.0\n\nsphx_glr_examples_eigen_solve.py (../../examples/eigen_solve.py)\n\n00:01.491\n\n0.0\n\nsphx_glr_examples_solve_sparse_matrix.py (../../examples/solve_sparse_matrix.py)\n\n00:00.609\n\n0.0\n\nsphx_glr_examples_scipy_sparse_matrix.py (../../examples/scipy_sparse_matrix.py)\n\n00:00.567\n\n0.0\n\nsphx_glr_examples_basic_operations.py (../../examples/basic_operations.py)\n\n00:00.527\n\n0.0\n\nsphx_glr_examples_use_numpy_arrays.py (../../examples/use_numpy_arrays.py)\n\n00:00.381\n\n0.0\n\nsphx_glr_examples_solve_dense_matrix.py (../../examples/solve_dense_matrix.py)\n\n00:00.332\n\n0.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.dot.html#dot","title":"dot","text":"dot\n\n\n\nAnsMath.dot(vec_a, vec_b)\n\nMultiply two AnsMath vectors.\n\nParameters\n\nvec_a\n\nAnsVec\n\nAnsMath vector.\n\nvec_b\n\nAnsVec\n\nAnsMath vector.\n\nReturns\n\npython:float\n\nProduct of multiplying the two vectors.\n\nExamples\n\n>>> v = mm.ones(10)\n>>> w = mm.ones(10)\n>>> v.dot(w)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.norm.html#norm","title":"norm","text":"norm\n\n\n\nAnsVec.norm(nrmtype='nrm2')\n\nReturn the norm of the AnsMath object.\n\nParameters\n\nnrmtype\n\npython:str, optional\n\nMathematical norm to use. The default is 'NRM2'. Options are:\n\n'NRM2': L2 (Euclidean or SRSS) norm.\n\n'NRM1': L1 (absolute sum) norm (vectors only).\n\n'NRMINF': Maximum norm.\n\nReturns\n\npython:float\n\nNorm of the matrix or the one or more vectors.\n\nExamples\n\n>>> dim = 1000\n>>> m2 = mm.rand(dim, dim)\n>>> nrm = m2.norm()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.asarray.html#asarray","title":"asarray","text":"asarray\n\n\n\nAnsMat.asarray(dtype=None) -> ndarray\n\nReturn the matrix as a NumPy array.\n\nParameters\n\ndtype\n\nnumpy.dtype, optional\n\nNumPy data type to upload the array as. The options are np.double,\nnp.int32, and np.int64. The default is the current array\ntype.\n\nReturns\n\nnp.ndarray\n\nNumPy array with the defined data type.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> v = mm.ones(2,2)\n>>> v.asarray()\narray([[1., 1.], [1., 1.]])\n>>> v.asarray(dtype=np.int32)\narray([[1, 1], [1, 1]])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.kron.html#kron","title":"kron","text":"kron\n\n\n\nAnsMat.kron(obj)\n\nCalculates the Kronecker product of two matrices/vectors\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nReturns\n\nAnsMat or AnsVec\n\nKronecker product between the two matrices/vectors.\n\nRequires at least MAPDL version 2023R2.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> m1 = mm.rand(3, 3)\n>>> m2 = mm.rand(4,2)\n>>> res = m1.kron(m2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.kron.html#kron","title":"kron","text":"kron\n\n\n\nAnsVec.kron(obj)\n\nCalculates the Kronecker product of two matrices/vectors\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nReturns\n\nAnsMat or AnsVec\n\nKronecker product between the two matrices/vectors.\n\nRequires at least MAPDL version 2023R2.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> m1 = mm.rand(3, 3)\n>>> m2 = mm.rand(4,2)\n>>> res = m1.kron(m2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"getting_started/index.html#getting-started","title":"Getting started","text":"Getting started\n\nFor information on getting a licensed copy of Ansys Mechanical APDL, visit\nthe Ansys web site."},{"objectID":"Home","href":"getting_started/index.html#installation","title":"Getting started > Installation","text":"Installation"},{"objectID":"Home","href":"getting_started/index.html#for-users","title":"Getting started > For users","text":"For users\n\nThe ansys.math.core package currently supports Python 3.10 through\nPython 3.13 on Windows, Mac OS, and Linux.\n\nInstall the latest package for use with this command:\n\nAlternatively, install the latest\nPyAnsys Math GitHub package\nwith this command:"},{"objectID":"Home","href":"getting_started/index.html#for-developers","title":"Getting started > For developers","text":"For developers\n\nFor a local development version, install the latest package with:\n\nInstalling the development version allows you to edit the ansys-math-core\npackage locally. The changes that you make are reflected in your setup\nafter restarting the Python kernel."},{"objectID":"Home","href":"getting_started/index.html#verify-your-installation","title":"Getting started > Verify your installation","text":"Verify your installation\n\nCheck that you can start PyAnsys Math from Python by running this code:\n\nIf you see a response from the server, you can start using PyAnsys Math\nas a service."},{"objectID":"Home","href":"getting_started/index.html#ansys-software-requirements","title":"Getting started > Ansys software requirements","text":"Ansys software requirements\n\nYou must have a copy of Ansys 2021 R1 or later installed locally.\n\nThe latest versions of Ansys provide significantly better support\nand features. PyAnsys Math is not supported on Ansys versions earlier than 2021 R1.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.get_vec.html#get_vec","title":"get_vec","text":"get_vec\n\n\n\nAnsMath.get_vec(dtype=None, name=None, fname='file.full', mat_id='RHS', asarray=False)\n\nLoad a vector from a FULL file.\n\nParameters\n\ndtype\n\nnumpy.dtype, optional\n\nNumPy data type to store the vector as. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\n\nname\n\npython:str, optional\n\nAnsMath vector name. The default is None, in which case a\nname is automatically generated.\n\nfname\n\npython:str, optional\n\nName of the file to read the vector from. The default is \"file.full\".\n\nmat_id\n\npython:str, optional\n\nVector ID to load. If loading from a \"*.full\" file,\nthe vector ID can be one of the following:\n\n\"RHS\": Load vector\n\n\"GVEC\": Constraint equation constant terms\n\n\"BACK\": Nodal mapping vector (internal to user)\nIf this vector ID is used, the default dtype is np.int32.\n\n\"FORWARD\" - Nodal mapping vector (user to internal).\nIf this vector ID is used, the default dtype is np.int32.\n\nasarray\n\nbool, optional\n\nWhether to return a NumPy array rather than an AnsMath vector.\nThe default is False.\n\nReturns\n\nAnsVec or numpy.ndarray\n\nAnsMath vector or NumPy array vector, depending on the value for\nthe asarray parameter.\n\nExamples\n\n>>> vec = mm.get_vec(fname='PRSMEMB.full', mat_id=\"RHS\")\n>>> vec\nAnsMath vector size 126\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.ones.html#ones","title":"ones","text":"ones\n\n\n\nAnsMat.ones()\n\nSet all values of the object to one.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/index.html#examples","title":"Examples","text":"Examples\n\nThese examples show how you use the PyAnsys Math library.\n\nsphx_glr_examples_ansys-math_vs_scipy.py\n\nsphx_glr_examples_basic_operations.py\n\nsphx_glr_examples_eigen_solve.py\n\nsphx_glr_examples_scipy_sparse_matrix.py\n\nsphx_glr_examples_solve_dense_matrix.py\n\nsphx_glr_examples_solve_sparse_matrix.py\n\nsphx_glr_examples_use_numpy_arrays.py\n\n\n\nGallery generated by Sphinx-Gallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.set_vec.html#set_vec","title":"set_vec","text":"set_vec\n\n\n\nAnsMath.set_vec(data, name=None)\n\nPush a NumPy array or a Python list to the MAPDL memory workspace.\n\nParameters\n\ndata\n\nnp.ndarray, python:list\n\nNumPy array or Python list to push to MAPDL. It must be\none dimensional.\n\nname\n\npython:str, optional\n\nAnsMath vector name. The default is None, in which case\na name is automatically generated.\n\nReturns\n\nAnsVec\n\nAnsMath vector instance generated from the pushed vector.\n\nExamples\n\nPush a random vector from NumPy to MAPDL.\n\n>>> data = np.random.random(10)\n>>> vec = mm.set_vec(data)\n>>> np.isclose(vec.asarray(), data)\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.mat.html#mat","title":"mat","text":"mat\n\n\n\nAnsMath.mat(nrow=1, ncol=1, dtype=<class 'numpy.float64'>, init=None, name=None, asarray=False)\n\nCreate a matrix.\n\nParameters\n\nnrow\n\npython:int, optional\n\nNumber of rows. The default is 1.\n\nncol\n\npython:int, optional\n\nNumber of columns. The default is 1.\n\ndtype\n\nnp.dtype, optional\n\nNumPy data type of the matrix. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\n\ninit\n\npython:str, optional\n\nInitialization options. Options are \"zeros\", \"ones\",\nor \"rand\". The default is \"zeros\".\n\nname\n\npython:str, optional\n\nAnsMath matrix name. The default is None, in which case a\nname is automatically generated.\n\nasarray\n\nbool, optional\n\nWhether to return a NumPy array rather than an AnsMath matrix.\nThe default is False.\n\nReturns\n\nAnsMat or numpy.ndarray\n\nAnsMath matrix or NumPy array matrix, depending on the value for\nthe asarray parameter.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.copy.html#copy","title":"copy","text":"copy\n\n\n\nAnsVec.copy()\n\nGet a copy of the vector.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.ones.html#ones","title":"ones","text":"ones\n\n\n\nAnsSolver.ones()\n\nSet all values of the object to one.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.asarray.html#asarray","title":"asarray","text":"asarray\n\n\n\nAnsVec.asarray(dtype=None) -> ndarray\n\nReturn the vector as a NumPy array.\n\nParameters\n\ndtype\n\nnumpy.dtype, optional\n\nNumPy data type to upload the array as. The options are numpy.double,\nnumpy.int32, and numpy.int64. The default is the current\narray type.\n\nReturns\n\nnp.ndarray\n\nNumPy array with the defined data type.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> v = mm.ones(10)\n>>> v.asarray()\n[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n>>> v.asarray(dtype=np.int32)\n[1 1 1 1 1 1 1 1 1 1]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.kron.html#kron","title":"kron","text":"kron\n\n\n\nAnsSolver.kron(obj)\n\nCalculates the Kronecker product of two matrices/vectors\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nReturns\n\nAnsMat or AnsVec\n\nKronecker product between the two matrices/vectors.\n\nRequires at least MAPDL version 2023R2.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> m1 = mm.rand(3, 3)\n>>> m2 = mm.rand(4,2)\n>>> res = m1.kron(m2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.factorize.html#factorize","title":"factorize","text":"factorize\n\n\n\nAnsSolver.factorize(mat, algo=None, inplace=True)\n\nFactorize a matrix.\n\nPerform the numerical factorization of a linear solver system: ().\n\nBy default, factorization modifies the input matrix mat\nin place. This behavior can be changed using the inplace parameter.\n\nParameters\n\nmat\n\nAnsMat\n\nAnsMath matrix.\n\nalgo\n\npython:str, optional\n\nFactorization algorithm. Options are \"LAPACK\" and \"DSP\".\nThe default is \"LAPACK\" for dense matrices and \"DSP\" for\nsparse matrices.\n\ninplace\n\nbool, optional\n\nWhether the factorization is performed on the input matrix\nrather than on a copy of this matrix. Performing factorization on\na copy of this matrix would result in no changes to the input\nmatrix. The default is True.\n\nExamples\n\nFactorize a random matrix and solve a linear system.\n\n>>> dim = 1000\n>>> m2 = mm.rand(dim, dim)\n>>> solver = mm.factorize(m2)\n>>> b = mm.ones(dim)\n>>> x = solver.solve(b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.status.html#status","title":"status","text":"status\n\n\n\nAnsMath.status()\n\nPrint the status of all AnsMath objects.\n\nExamples\n\n>>> mm.status()\nAPDLMATH PARAMETER STATUS-  (      4 PARAMETERS DEFINED)\nName         Type   Mem. (MB)       Dims            Workspace\nNJHLVM       SMAT   0.011           [126:126]               1\nRMAXLQ       SMAT   0.011           [126:126]               1\nWWYLBR       SMAT   0.011           [126:126]               1\nFIOMZR       VEC    0.001           126                     1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.mass.html#mass","title":"mass","text":"mass\n\n\n\nAnsMath.mass(dtype=<class 'numpy.float64'>, name=None, fname='file.full', asarray=False)\n\nLoad the mass matrix from a FULL file.\n\nParameters\n\ndtype\n\nnumpy.dtype, optional\n\nNumPy data type to store the matrix as. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\nThis parameter is only applicable if asarray=True.\n\nname\n\npython:str, optional\n\nAnsMath matrix name. The default is None, in which case a\nname is automatically generated.\n\nfname\n\npython:str, optional\n\nName of the file to read the matrix from. The default is \"file.full\".\n\nasarray\n\nbool, optional\n\nWhether to return a SciPy array rather than an AnsMath matrix.\nThe default is False.\n\nReturns\n\nAnsMat or scipy.sparse.csr.csr_matrix\n\nAnsMath matrix or SciPy sparse matrix, depending on the value for\nthe asarray parameter.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> mass = mm.mass()\n>>> mass\nAnsMath matrix 60 x 60\n\nConvert to a SciPy array.\n\n>>> mat = mass.asarray()\n>>> mat\n<60x60 sparse matrix of type '<class 'numpy.float64'>'\n    with 1734 stored elements in Compressed Sparse Row (CSR) format>.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.free.html#free","title":"free","text":"free\n\n\n\nAnsMath.free(mat=None)\n\nDelete AnsMath objects.\n\nmat: AnsMath object, optional\n\nAnsMath object to be deleted. Default value is None;\nall the AnsMath objects are deleted.\n\nExamples\n\n>>> u = mm.vec(10)\n>>> mm.free()\n>>> mm.status()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.norm.html#norm","title":"norm","text":"norm\n\n\n\nAnsMathObj.norm(nrmtype='nrm2')\n\nReturn the norm of the AnsMath object.\n\nParameters\n\nnrmtype\n\npython:str, optional\n\nMathematical norm to use. The default is 'NRM2'. Options are:\n\n'NRM2': L2 (Euclidean or SRSS) norm.\n\n'NRM1': L1 (absolute sum) norm (vectors only).\n\n'NRMINF': Maximum norm.\n\nReturns\n\npython:float\n\nNorm of the matrix or the one or more vectors.\n\nExamples\n\n>>> dim = 1000\n>>> m2 = mm.rand(dim, dim)\n>>> nrm = m2.norm()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.copy.html#copy","title":"copy","text":"copy\n\n\n\nAnsMathObj.copy()\n\nGet the name of the copy of this object.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.const.html#const","title":"const","text":"const\n\n\n\nAnsVec.const(value)\n\nSet all values of the object to a constant.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.axpy.html#axpy","title":"axpy","text":"axpy\n\n\n\nAnsMat.axpy(obj, val1, val2)\n\nPerform the matrix operation: self= val1*obj + val2*self.\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nval1\n\npython:float\n\nRatio applied to the AnsMath object.\n\nval2\n\npython:float\n\nRatio applied to the self object.\n\nReturns\n\nAnsVec or AnsMat\n\nMatrix operation result of self= val1*obj + val2*self.\n\nExamples\n\n>>> dim = 2\n>>> m1 = mm.ones(dim, dim)\n>>> m2 = mm.rand(dim, dim)\n>>> m1.axpy(m2, 3, 4)\n>>> m1.asarray()\narray([[5.251066  , 6.16097347], [6.99155442, 6.79767208]])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis section provides an overview of the public PyAnsys Math classes,\nfunctions, and attributes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.size.html#size","title":"size","text":"size\n\n\n\nproperty AnsMat.size: int\n\nNumber of items in the matrix.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.load_matrix_from_file.html#load_matrix_from_file","title":"load_matrix_from_file","text":"load_matrix_from_file\n\n\n\nAnsMath.load_matrix_from_file(dtype=<class 'numpy.float64'>, name=None, fname='file.full', mat_id='STIFF', asarray=False)\n\nImport a matrix from an existing FULL file.\n\nParameters\n\ndtype\n\nnumpy.dtype, optional\n\nData type to store the matrix as. The options are double\n(\"DOUBLE\" or \"D\"), complex numbers (\"COMPLEX\" or \"Z\"),\nor NumPy data type (np.double, np.int32, and np.int64).\nThe default is np.double.\n\nfname\n\npython:str, optional\n\nName of the file to read the matrix from. The default is \"file.full\".\n\nname\n\npython:str, optional\n\nAnsMath matrix name. The default is None, in which case a\nname is automatically generated.\n\nmat_id\n\npython:str, optional\n\nMatrix type. The default is \"STIFF\". Options are:\n\n\"STIFF\": Stiffness matrix.\n\n\"MASS\": Mass matrix.\n\n\"DAMP\": Damping matrix.\n\n\"GMAT\": Constraint equation matrix.\n\n\"K_RE\": Real part of the stiffness matrix.\n\n\"K_IM\": Imaginary part of the stiffness matrix.\n\nasarray\n\nbool, optional\n\nWhether to return a SciPy array rather than an AnsMath matrix.\nThe default is False.\n\nReturns\n\nAnsMat or scipy.sparse.csr.csr_matrix\n\nAnsMath matrix or SciPy sparse matrix, depending on the value for\nthe asarray parameter.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"user_guide/index.html#user-guide","title":"User guide","text":"User guide"},{"objectID":"Home","href":"user_guide/index.html#overview","title":"User guide > Overview","text":"Overview\n\nYou can use the AnsMath() method to launch an instance of PyAnsys Math.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"index.html#pyansys-math-documentation","title":"PyAnsys Math documentation","text":"PyAnsys Math documentation"},{"objectID":"Home","href":"index.html#introduction","title":"PyAnsys Math documentation > Introduction","text":"Introduction\n\nPyAnsys Math aims to gather all mathematical calculation tools present\nin Ansys software.\n\nThis Python library allows you to access and manipulate large sparse matrices\nand solve a variety of eigenproblems. It is presented in a similar manner to\nthe popular NumPy and SciPy libraries.\n\nThe command set for PyAnsys Math is based on tools for manipulating large mathematical\nmatrices and vectors that provide access to standard linear algebra operations and the\npowerful sparse linear solvers of Ansys Mechanical APDL (MAPDL), providing the ability\nto solve eigenproblems.\n\nPython and MATLAB eigensolvers are based on the publicly available\nLAPACK libraries and provide reasonable solve times for eigenproblems\nwith relatively small degrees of freedom (DOF), perhaps 100,000.\nHowever, Ansys solvers are designed for the scale of hundreds of\nmillions of DOF, providing a variety of situations where you can\ndirectly leverage Ansys high-performance solvers on a variety of\neigenproblems. Fortunately, you can leverage this without relearning\nan entirely new language because PyAnsys Math is written in a similar manner\nas the NumPy and SciPy libraries. For example, here is a comparison between\nthe NumPy and SciPy linear algebra solvers and the PyAnsys Math solver:\n\nNumPy and SciPy versus PyAnsys Math implementations\n\n\n\n\n\nNumPy and SciPy\n\nPyAnsys Math\n\n\n\n"},{"objectID":"Home","href":"index.html#background","title":"PyAnsys Math documentation > Background","text":"Background\n\nPyAnsys Math uses the MAPDL solver in the background. It is based on the\nlaunch_mapdl() method from PyMAPDL’s ansys-mapdl-core\npackage.\n\nBecause PyMAPDL is gRPC-based, the MAPDL solver can function as\na server, ready to respond to connecting clients. With gRPC establishing\nsecure connections, a client app can directly call methods on a potentially\nremote MAPDL instance as if it were a local object. The use of HTTP/2 makes\ngRPC friendly to modern internet infrastructures. This, along with the use\nof binary transmission formats, favors higher performance."},{"objectID":"Home","href":"index.html#quick-code","title":"PyAnsys Math documentation > Quick code","text":"Quick code\n\nHere is a brief example of how you use PyAnsys Math:\n\nFor comprehensive PyAnsys Math examples, see ref_pymath_examples.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/use_numpy_arrays.html#manipulate-ansmath-vectors-or-dense-matrices-as-numpy-arrays","title":"Manipulate AnsMath vectors or dense matrices as NumPy arrays","text":"Manipulate AnsMath vectors or dense matrices as NumPy arrays\n\nThis example demonstrates how to use NumPy arrays to exchange data between PyAnsys Math\nand Python.\n\nThis example requires Ansys 2021 R2 or later."},{"objectID":"Home","href":"examples/use_numpy_arrays.html#convert-ansmath-vector-into-numpy-array","title":"Manipulate AnsMath vectors or dense matrices as NumPy arrays > Convert AnsMath vector into NumPy array","text":"Convert AnsMath vector into NumPy array\n\nAllocate an AnsMath vector with 10 doubles.\n\nCreate a NumPy array from this AnsMath vector.\n\nNote that these are two separate objects. Memory is\nduplicated. Modifying one object does not modify its clone.\n\nYou can manipulate this NumPy array with all existing NumPy\nfeatures.\n\nAlternatively, the AnsMath object can be operated on directly with\nusing NumPy methods.\n\nNote that some methods have APDL corollaries, and these methods are\nmore efficient if performed within PyAnsys Math.\n\nFor example, the norm method can be performed within PyAnsys Math."},{"objectID":"Home","href":"examples/use_numpy_arrays.html#copy-numpy-array-to-an-ansmath-vector","title":"Manipulate AnsMath vectors or dense matrices as NumPy arrays > Copy NumPy array to an AnsMath vector","text":"Copy NumPy array to an AnsMath vector\n\nYou can push back any NumPy vector or 2D array to PyAnsys Math. This\ncreates a new AnsMath vector, which in this case is named \"NewVec:."},{"objectID":"Home","href":"examples/use_numpy_arrays.html#create-a-python-handle-to-this-vector","title":"Manipulate AnsMath vectors or dense matrices as NumPy arrays > Create a Python handle to this vector","text":"Create a Python handle to this vector\n\nCreate a Python handle to this vector by specifying its name."},{"objectID":"Home","href":"examples/use_numpy_arrays.html#apply-same-features-to-dense-arrays","title":"Manipulate AnsMath vectors or dense matrices as NumPy arrays > Apply same features to dense arrays","text":"Apply same features to dense arrays\n\nYou can apply the same features to dense APDL matrices and NumPy arrays.\n\nAllocate an AnsMath dense matrix.\n\n\n\nConvert the AnsMatch dense matrix to a NumPy array.\n\nUse the matrix method to load the NumPy array to APDL.\n\nLoad this matrix from APDL and verify it is identical."},{"objectID":"Home","href":"examples/use_numpy_arrays.html#stop-pyansys-math","title":"Manipulate AnsMath vectors or dense matrices as NumPy arrays > Stop PyAnsys Math","text":"Stop PyAnsys Math\n\nStop PyAnsys Math.\n\nTotal running time of the script: (0 minutes 0.381 seconds)\n\n\n\nDownload Jupyter notebook: use_numpy_arrays.ipynb\n\nDownload Python source code: use_numpy_arrays.py\n\nDownload zipped: use_numpy_arrays.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"contributing/index.html#contribute","title":"Contribute","text":"Contribute\n\nOverall guidance on contributing to a PyAnsys library appears in the\nContributing topic\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyAnsys Math.\n\nThe following contribution information is specific to PyAnsys Math."},{"objectID":"Home","href":"contributing/index.html#clone-the-repository","title":"Contribute > Clone the repository","text":"Clone the repository\n\nRun this code to clone and install the latest version of PyAnsys Math in development mode:"},{"objectID":"Home","href":"contributing/index.html#post-issues","title":"Contribute > Post issues","text":"Post issues\n\nUse the PyAnsys Math Issues page to submit questions,\nreport bugs, and request new features. When possible, use these issue\ntemplates:\n\nBug report template\n\nFeature request template\n\nIf your issue does not fit into one of these categories, create your own issue.\n\nTo reach the project support team, email pyansys_core."},{"objectID":"Home","href":"contributing/index.html#build-documentation","title":"Contribute > Build documentation","text":"Build documentation\n\nTo build the PyAnsys Math documentation locally, in the root directory of the repository, run:\n\nDocumentation for the latest stable release of PyAnsys Math is hosted at\nPyAnsys Math Documentation.\n\nIn the upper right corner of the documentation’s title bar, there is an option for\nswitching from viewing the documentation for the latest stable release to viewing\nthe documentation for the development version or previously released versions."},{"objectID":"Home","href":"contributing/index.html#adhere-to-code-style","title":"Contribute > Adhere to code style","text":"Adhere to code style\n\nPyAnsys Math follows the PEP8 standard as outlined in the PyAnsys Development Guide and implements style checking using\npre-commit.\n\nTo ensure your code meets minimum code styling standards, run this code:\n\nYou can also install this as a pre-commit hook by running this code:\n\nThis way, it’s not possible for you to push code that fails the style checks:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.ones.html#ones","title":"ones","text":"ones\n\n\n\nAnsMath.ones(nrow, ncol=None, dtype=<class 'numpy.float64'>, name=None, asarray=False)\n\nCreate a vector or a matrix where all values are ones.\n\nParameters\n\nnrow\n\npython:int\n\nNumber of rows.\n\nncol\n\npython:int, optional\n\nNumber of columns. If a value is specified, a matrix is returned.\n\ndtype\n\nnp.dtype, optional\n\nNumPy data type of the object. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\n\nname\n\npython:str, optional\n\nAnsMath object name. The default is None, in which case a\nname is automatically generated.\n\nasarray\n\nbool, optional\n\nWhether to return a NumPy array rather than an AnsMath object.\nThe default is False.\n\nReturns\n\nAnsVec, AnsMat, or numpy.ndarray\n\nAnsMath vector, NumPy array vector, AnsMath matrix, or NumPy array matrix,\ndepending on the value for the asarray parameter and if a value for\nthe ncol parameter is specified.\n\nExamples\n\nCreate a vector where all values are ones.\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> vec = mm.ones(10)\n\nCreate a matrix where all values are ones.\n\n>>> mat = mm.ones(10, 10)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.mgs.html#mgs","title":"mgs","text":"mgs\n\n\n\nAnsMath.mgs(mat, thresh='', **kwargs)\n\nApply the Modified Gram-Schmidt (MGS) algorithm to a matrix.\n\nThe MGS algorithm is only applicable to dense matrices.\nColumns that are linearly dependent on others are removed,\nleaving the independent or basis vectors. The matrix is\nresized according to the new size determined by the algorithm.\n\nParameters\n\nmat\n\nAnsMat\n\nArray to apply the Modified Gram-Schmidt algorithm to.\n\nthresh\n\npython:float, optional\n\nNumerical threshold value for managing the compression.\nFor the MGS algorithm, the default value is 1E-14.\n\nExamples\n\nApply the MGS algorithm on an existing dense rectangular matrix,\nusing the default threshold. The AnsMath matrix is modified in-situ.\n\n>>> mm.mgs(mat)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.svd.html#svd","title":"svd","text":"svd\n\n\n\nAnsMath.svd(mat, thresh='', sig='', v='', **kwargs)\n\nApply an SVD algorithm on a matrix.\n\nThe SVD algorithm is only applicable to dense matrices.\nColumns that are linearly dependent on others are removed,\nleaving the independent or basis vectors. The matrix is\nresized according to the new size determined by the SVD algorithm.\n\nFor the SVD algorithm, the singular value decomposition of an\ninput matrix is a factorization of the form:\n\nM = U*SIGMA*V.T\n\nFor more information, see Singular Value Decomposition.\n\nParameters\n\nmat\n\nAnsMat\n\nArray to compress.\n\nthresh\n\npython:float, optional\n\nNumerical threshold value for managing the compression.\nThe default is is 1E-7.\n\nsig\n\npython:str, optional\n\nName of the vector for storing the SIGMA values.\n\nv\n\npython:str, optional\n\nName of the vector for storing the values from v.\nSee the preceding equation.\n\nExamples\n\nApply the SVD algorithm on an existing dense rectangular matrix, using\nthe default threshold. The matrix is modified in-place.\n\n>>> mm.svd(mat)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.const.html#const","title":"const","text":"const\n\n\n\nAnsSolver.const(value)\n\nSet all values of the object to a constant.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.dot.html#dot","title":"dot","text":"dot\n\n\n\nAnsMat.dot(obj)\n\nMultiply the AnsMath object by another AnsMath object.\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nReturns\n\nAnsVec or AnsMat\n\nMatrix multiplication result.\n\nExamples\n\nMultiplication of a matrix and vector.\n\n>>> m1 = mm.rand(10, 10)\n>>> v1 = mm.rand(10)\n>>> v2 = m1.dot(v1)\n>>> assert np.allclose(m1.asarray() @ v1.asarray(), v2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.norm.html#norm","title":"norm","text":"norm\n\n\n\nAnsSolver.norm(nrmtype='nrm2')\n\nReturn the norm of the AnsMath object.\n\nParameters\n\nnrmtype\n\npython:str, optional\n\nMathematical norm to use. The default is 'NRM2'. Options are:\n\n'NRM2': L2 (Euclidean or SRSS) norm.\n\n'NRM1': L1 (absolute sum) norm (vectors only).\n\n'NRMINF': Maximum norm.\n\nReturns\n\npython:float\n\nNorm of the matrix or the one or more vectors.\n\nExamples\n\n>>> dim = 1000\n>>> m2 = mm.rand(dim, dim)\n>>> nrm = m2.norm()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.zeros.html#zeros","title":"zeros","text":"zeros\n\n\n\nAnsVec.zeros()\n\nSet all values of the object to zero.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.axpy.html#axpy","title":"axpy","text":"axpy\n\n\n\nAnsVec.axpy(obj, val1, val2)\n\nPerform the matrix operation: self= val1*obj + val2*self.\n\nParameters\n\nobj\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nval1\n\npython:float\n\nRatio applied to the AnsMath object.\n\nval2\n\npython:float\n\nRatio applied to the self object.\n\nReturns\n\nAnsVec or AnsMat\n\nMatrix operation result of self= val1*obj + val2*self.\n\nExamples\n\n>>> dim = 2\n>>> m1 = mm.ones(dim, dim)\n>>> m2 = mm.rand(dim, dim)\n>>> m1.axpy(m2, 3, 4)\n>>> m1.asarray()\narray([[5.251066  , 6.16097347], [6.99155442, 6.79767208]])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsVec.rand.html#rand","title":"rand","text":"rand\n\n\n\nAnsVec.rand()\n\nSet all values of the object to a random number.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.subtract.html#subtract","title":"subtract","text":"subtract\n\n\n\nAnsMath.subtract(obj1, obj2)\n\nSubtract two AnsMath vectors or matrices.\n\nParameters\n\nobj1\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nobj2\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nReturns\n\nAnsVec or AnsMat\n\nDifference of the two input vectors or matrices. The type of\nthe output matches the type of the input.\n\nExamples\n\nSubtract two AnsMath vectors.\n\n>>> v = mm.ones(10)\n>>> w = mm.ones(10)\n>>> x = mm.subtract(v, w)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsSolver.rand.html#rand","title":"rand","text":"rand\n\n\n\nAnsSolver.rand()\n\nSet all values of the object to a random number.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.T.html#t","title":"T","text":"T\n\n\n\nproperty AnsMat.T\n\nTransposition of an AnsMath matrix.\n\nExamples\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n>>> mat = mm.rand(2, 3)\n>>> mat_t = mat.T\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.add.html#add","title":"add","text":"add\n\n\n\nAnsMath.add(obj1, obj2)\n\nAdd two AnsMath vectors or matrices.\n\nParameters\n\nobj1\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nobj2\n\nAnsVec or AnsMat\n\nAnsMath object.\n\nReturns\n\nAnsVec or AnsMat\n\nSum of the two input objects. The type of the output matches\nthe type of the input.\n\nExamples\n\nAdd two AnsMath vectors.\n\n>>> v = mm.ones(10)\n>>> w = mm.ones(10)\n>>> x = mm.add(v, w)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.shape.html#shape","title":"shape","text":"shape\n\n\n\nproperty AnsMat.shape: tuple\n\nNumPy-like shape.\n\nTuple of (rows and columns).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n00:15.448 total execution time for 7 files from examples:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_ansys-math_vs_scipy.py (ansys-math_vs_scipy.py)\n\n00:11.541\n\n0.0\n\nsphx_glr_examples_eigen_solve.py (eigen_solve.py)\n\n00:01.491\n\n0.0\n\nsphx_glr_examples_solve_sparse_matrix.py (solve_sparse_matrix.py)\n\n00:00.609\n\n0.0\n\nsphx_glr_examples_scipy_sparse_matrix.py (scipy_sparse_matrix.py)\n\n00:00.567\n\n0.0\n\nsphx_glr_examples_basic_operations.py (basic_operations.py)\n\n00:00.527\n\n0.0\n\nsphx_glr_examples_use_numpy_arrays.py (use_numpy_arrays.py)\n\n00:00.381\n\n0.0\n\nsphx_glr_examples_solve_dense_matrix.py (solve_dense_matrix.py)\n\n00:00.332\n\n0.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Oops!","href":"404.html#oops","title":"Oops!","text":"Oops!\n\nThis is unexpected.\n\nThe page you are requesting does not exist.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.const.html#const","title":"const","text":"const\n\n\n\nAnsMathObj.const(value)\n\nSet all values of the object to a constant.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.html#ansmath","title":"AnsMath","text":"AnsMath\n\n\n\nclass ansys.math.core.math.AnsMath(mapdl=None, **kwargs)\n\nProvides the common class for abstract math objects.\n\nExamples\n\nCreate an instance.\n\n>>> import ansys.math.core.math as pymath\n>>> mm = pymath.AnsMath()\n\nAdd vectors.\n\n>>> v1 = mm.ones(10)\n>>> v2 = mm.ones(10)\n>>> v3 = v1 + v2\n\nMultiply matrices (not yet available).\n\n>>> v1 = mm.ones(10)\n>>> m1 = mm.rand(10, 10)\n>>> v2 = m1*v1\n\nMethods\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.vec.html#vec","title":"vec","text":"vec\n\n\n\nAnsMath.vec(size=0, dtype=<class 'numpy.float64'>, init=None, name=None, asarray=False)\n\nCreate a vector.\n\nParameters\n\nsize\n\npython:int\n\nSize of the vector.\n\ndtype\n\nnp.dtype, optional\n\nNumPy data type of the vector. The options are np.double,\nnp.int32, and np.int64. The default is np.double.\n\ninit\n\npython:str, optional\n\nInitialization options. Options are \"ones\", \"zeros\",\nor \"rand\". The default is \"zeros\".\n\nname\n\npython:str, optional\n\nAnsMath vector name. The default is None, in which case a\nname is automatically generated.\n\nasarray\n\nbool, optional\n\nWhether the output is to be a NumPy array vector rather than an\nAnsMath vector. The default is False.\n\nReturns\n\nAnsVec or numpy.ndarray\n\nAnsMath vector or NumPy array vector, depending on the value for\nthe asarray parameter.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMath.sparse.html#sparse","title":"sparse","text":"sparse\n\n\n\nAnsMath.sparse(mat, thresh='', **kwargs)\n\nSparsify an existing matrix based on a threshold value.\n\nParameters\n\nmat\n\nAnsMat\n\nDense matrix to convert to a sparse matrix.\n\nthresh\n\npython:float, optional\n\nNumerical threshold value for sparsifying. The default\nvalue is 1E-16.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/math.html#pyansys-math","title":"PyAnsys Math","text":"PyAnsys Math\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#ansmath-sparse-matrices-and-scipy-sparse-matrices","title":"AnsMath sparse matrices and SciPy sparse matrices","text":"AnsMath sparse matrices and SciPy sparse matrices\n\nThis example shows how to get AnsMath sparse matrices into SciPy\nsparse matrices."},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#perform-required-imports-and-start-pyansys","title":"AnsMath sparse matrices and SciPy sparse matrices > Perform required imports and start PyAnsys","text":"Perform required imports and start PyAnsys\n\nPerform required imports."},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#get-matrices","title":"AnsMath sparse matrices and SciPy sparse matrices > Get matrices","text":"Get matrices\n\nRun the input file from Verification Manual 153 and then\nget the stiff (k) matrix from the FULL file."},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#copy-ansmath-sparse-matrix-to-scipy-csr-matrix-and-plot","title":"AnsMath sparse matrices and SciPy sparse matrices > Copy AnsMath sparse matrix to SciPy CSR matrix and plot","text":"Copy AnsMath sparse matrix to SciPy CSR matrix and plot\n\nCopy the AnsMath sparse matrix to a SciPy CSR matrix. Then, plot the\ngraph of the sparse matrix.\n\n"},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#access-vectors","title":"AnsMath sparse matrices and SciPy sparse matrices > Access vectors","text":"Access vectors\n\nYou can access the three vectors that describe this sparse matrix with:\n\npk.data\n\npk.indices\n\npk.indptr\n\nFor more information, see SciPy’s class description for the\nCSR (compressed sparse row) matrix."},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#create-ansmath-sparse-matrix-from-scipy-sparse-csr-matrix","title":"AnsMath sparse matrices and SciPy sparse matrices > Create AnsMath sparse matrix from SciPy sparse CSR matrix","text":"Create AnsMath sparse matrix from SciPy sparse CSR matrix\n\nCreate an AnsMath sparse matrix from a SciPy sparse CSR matrix.\nThen, transfer the SciPy CSR matrix back to PyAnsys Math.\n\nWhile this code uses a matrix that was originally within MAPDL, you can\nload any CSR matrix into PyAnsys Math.\n\nCheck that the matrices k and my_mat are exactly the sames. The\nnorm of the difference should be zero."},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#print-csr-representation-in-pyansys-math","title":"AnsMath sparse matrices and SciPy sparse matrices > Print CSR representation in PyAnsys Math","text":"Print CSR representation in PyAnsys Math\n\nPrinting the list of objects for the CSR representation in the PyAnsys Math\nspace finds these objects:\n\nTwo SMAT objects, corresponding to the k, MSub matrices,\nwith encrypted names.\n\nThe my_mat SMAT object. Its size is zero because the three\nvectors are stored separately.\n\nThe three vectors of the CSR my_mat structure: MY_MAT_PTR,\nMY_MAT_IND, and MY_MAT_DATA."},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#access-id-of-python-object","title":"AnsMath sparse matrices and SciPy sparse matrices > Access ID of Python object","text":"Access ID of Python object\n\nTo determine which PyAnsys Math object corresponds to which Python object,\naccess the id property of the Python object."},{"objectID":"Home","href":"examples/scipy_sparse_matrix.html#stop-pyansys-math","title":"AnsMath sparse matrices and SciPy sparse matrices > Stop PyAnsys Math","text":"Stop PyAnsys Math\n\nStop PyAnsys Math.\n\nTotal running time of the script: (0 minutes 0.567 seconds)\n\n\n\nDownload Jupyter notebook: scipy_sparse_matrix.ipynb\n\nDownload Python source code: scipy_sparse_matrix.py\n\nDownload zipped: scipy_sparse_matrix.zip\n\nGallery generated by Sphinx-Gallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMat.nrow.html#nrow","title":"nrow","text":"nrow\n\n\n\nproperty AnsMat.nrow: int\n\nNumber of columns in the matrix.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.math.core.math.AnsMathObj.zeros.html#zeros","title":"zeros","text":"zeros\n\n\n\nAnsMathObj.zeros()\n\nSet all values of the object to zero.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}]