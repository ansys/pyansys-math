# check spelling, codestyle
name: GitHub CI

# run only on main branch.  This avoids duplicated actions on PRs
on:
  workflow_dispatch:
  schedule: # UTC at 0300
    - cron: "0 3 * * *"
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.9'
  PACKAGE_NAME: 'ansys-math'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style checks"
    runs-on: ubuntu-latest
    steps:
      - name: "PyAnsys code style checks"
        uses: pyansys/actions/code-style@v2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: pyansys/actions/doc-style@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  docs-build:
    name: Doc building
    runs-on: ubuntu-latest
    needs: docs-style
    steps:
      - name: "Run Ansys documentation building action"
        uses: pyansys/actions/doc-build@v2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  tests:
    name: Build and testing
    runs-on: ubuntu-latest
    needs: [code-style, docs-build]
  
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build twine

      - name: Build wheel and sdist
        run: |
          python -m pip install build
          python -m build
          python -m twine check dist/*

      - name: Install library
        run: pip install .

      - name: Unit Testing
        run: |
          pip install .[tests]
          pytest -m pytest -v --durations=10 --maxfail=10  --reruns 7 --reruns-delay 3 --only-rerun MapdlExitedError  --cov=ansys.mapdl.core --cov-report=xml --cov-report=html

      - uses: codecov/codecov-action@v3
        name: 'Upload coverage to Codecov'

  release:

    name: "Release project to private PyPI, public PyPI and GitHub"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
    #  - name: "Release to the private PyPI repository"
    #    uses: pyansys/actions/release-pypi-private@v1
    #    with:
    #      library-name: ${{ env.PACKAGE_NAME }}
    #      twine-username: "__token__"
    #      twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
#
    #  - name: "Release to the public PyPI repository"
    #    uses: pyansys/actions/release-pypi-public@v1
    #    with:
    #      library-name: ${{ env.PACKAGE_NAME }}
    #      twine-username: "__token__"
    #      twine-token: ${{ secrets.PYPI_TOKEN }}
#
    - name: "Release to GitHub"
      uses: pyansys/actions/release-github@v1
      with:
        library-name: ${{ env.PACKAGE_NAME }}